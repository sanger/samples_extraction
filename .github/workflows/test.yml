name: Tests

env:
  TZ: Europe/London

on:
  - push
  - pull_request

jobs:
  ruby:
    runs-on: ubuntu-latest

    env:
      RAILS_ENV: test

    services:
      mysql:
        # Use the Mysql docker image https://hub.docker.com/_/mysql
        image: mysql:8.0
        ports:
          - 3306 # Default port mappings
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: samples_extraction_test

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache:
            true # Runs bundle install and caches gems. See the ruby_test.yml
            # example if you need more control over bundler.
      - name: Set up environment
        env:
          DBPORT: ${{ job.services.mysql.ports[3306] }}
        run: bin/setup

      - name: Run tests
        env:
          DBPORT: ${{ job.services.mysql.ports[3306] }}
        run: bundle exec rake

  yarn:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Export node version
        id: node_version
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.node_version.outputs.NODE_VERSION }}

      - name: Install
        run: yarn install

      - name: Run yarn test
        run: yarn test
